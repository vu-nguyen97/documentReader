apply plugin: "com.android.application"
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '..'
    // root = file("../")
    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native
    // reactNativeDir = file("../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen
    // codegenDir = file("../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js
    // cliFile = file("../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion

    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.flabs.document.reader"
    defaultConfig {
        applicationId "com.flabs.document.reader"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    packagingOptions {
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libjsc.so'
        pickFirst 'lib/arm64-v8a/libjsc.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        exclude("META-INF/DEPENDENCIES")
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")
    implementation project(':react-native-fs')
    // implementation("fr.opensagres.xdocreport:org.apache.poi.xwpf.converter.pdf:1.0.6")
    // implementation("fr.opensagres.xdocreport:fr.opensagres.xdocreport.itext.extension:2.0.0")
    // implementation("com.lowagie:itext:2.1.7")
    // implementation("org.apache.poi:poi-ooxml-schemas:4.1.2")

    // implementation("org.apache.poi:poi-ooxml:3.7")

    // ChatPGT
    // implementation("org.apache.poi:poi:5.2.3")
    // implementation("org.apache.poi:poi-ooxml:5.2.3")
    // implementation("org.apache.pdfbox:pdfbox:3.0.0-RC1")

    // https://stackoverflow.com/questions/52625737/converting-word-docx-to-pdf-using-apache-poi-and-itext
    implementation 'com.tom-roush:pdfbox-android:2.0.27.0'
    // implementation 'com.documents4j:documents4j-util-standalone:1.0.3'
    // implementation 'com.documents4j:documents4j-transformer-msoffice-word:1.0.3'
    // implementation 'com.google.guava:guava:32.0.1-jre'
    // implementation 'org.slf4j:slf4j-api:2.0.7'
    // implementation 'org.slf4j:slf4j-simple:2.0.7'

    // implementation 'com.documents4j:documents4j-api:0.2.1'
    // implementation 'com.documents4j:documents4j-util-conversion:0.2.1'
    // implementation 'com.documents4j:documents4j-transformer:0.2.1'
    // implementation 'com.documents4j:documents4j-local:0.2.1'

    // implementation("fr.opensagres.xdocreport:org.apache.poi.xwpf.converter.core:1.0.6")
    // implementation("fr.opensagres.xdocreport:org.apache.poi.xwpf.converter.pdf:1.0.6")
    // implementation("fr.opensagres.xdocreport:fr.opensagres.xdocreport.itext.extension:2.0.4")
    // implementation("com.lowagie:itext:2.1.7")

//     https://www.baeldung.com/pdf-conversions-java
    // implementation("org.apache.pdfbox:pdfbox-tools:2.0.25")
    // implementation("net.sf.cssbox:pdf2dom:2.0.1")
    //  implementation("net.sf.cssbox:pdf2dom-cssbox:2.0.0")
    //  implementation("com.itextpdf:itextpdf:5.5.10")
    // implementation("com.itextpdf.tool:xmlworker:5.5.10")
    // implementation("org.apache.poi:poi-ooxml:3.15")
    // implementation("org.apache.poi:poi-scratchpad:3.15")

    // https://mvnrepository.com/artifact/e-iceblue/spire.doc.free
//    implementation("e-iceblue:spire.doc.free:5.2.0")
//    implementation("e-iceblue:spire.doc:11.9.5")


    implementation files('libs\\aspose-words-23.9.0-android.via.java.jar')
    implementation project(':react-native-file-viewer')

    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }

    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}")
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
